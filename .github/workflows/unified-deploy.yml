name: Unified Deployment and Backup

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  schedule:
    # Run weekly backup on Sundays at 02:00 UTC
    - cron: '0 2 * * 0'
  workflow_dispatch:
    inputs:
      deploy_target:
        description: 'Deployment target'
        required: false
        default: 'github-pages'
        type: choice
        options:
        - github-pages
        - render
        - netlify

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "deployment-${{ github.workflow }}-${{ github.ref }}"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: 🌸 Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Full history for better mirroring
    
    - name: 🔧 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: 🐍 Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        cache: 'pip'
    
    - name: 📦 Install Node.js dependencies
      run: |
        if [ -f "package.json" ]; then
          npm install
        else
          echo "No package.json found, skipping Node.js dependencies"
        fi
    
    - name: 📦 Install Python dependencies
      run: |
        if [ -f "requirements.txt" ]; then
          pip install -r requirements.txt
        else
          echo "No requirements.txt found, skipping Python dependencies"
        fi
    
    - name: 🏗️ Build static site
      run: |
        if [ -f "build_unified_static.py" ]; then
          python build_unified_static.py
        elif [ -f "build_static.py" ]; then
          python build_static.py
        elif [ -f "package.json" ] && npm run build 2>/dev/null; then
          npm run build
        else
          echo "No build script found, using existing files"
          mkdir -p dist
          cp -r . dist/ 2>/dev/null || true
        fi
    
    - name: 🧪 Run tests (if available)
      run: |
        if [ -f "package.json" ] && npm test 2>/dev/null; then
          npm test
        elif [ -f "requirements.txt" ] && pip show pytest 2>/dev/null; then
          python -m pytest
        else
          echo "No tests configured, skipping"
        fi
    
    - name: 📄 Setup Pages
      if: github.ref == 'refs/heads/main' && (github.event_name == 'push' || inputs.deploy_target == 'github-pages')
      uses: actions/configure-pages@v4
      
    - name: 📤 Upload artifact for GitHub Pages
      if: github.ref == 'refs/heads/main' && (github.event_name == 'push' || inputs.deploy_target == 'github-pages')
      uses: actions/upload-pages-artifact@v3
      with:
        path: './github_pages_deploy'
        
    # Render deployment (if configured)
    - name: 🚀 Deploy to Render
      if: inputs.deploy_target == 'render' && vars.RENDER_SERVICE_ID
      run: |
        curl -X POST "https://api.render.com/v1/services/${{ vars.RENDER_SERVICE_ID }}/deploys" \
          -H "Authorization: Bearer ${{ secrets.RENDER_API_KEY }}" \
          -H "Content-Type: application/json"
    
    # Generate ESSENCE.md
    - name: 📝 Update ESSENCE.md
      if: github.event_name == 'schedule' || github.event_name == 'workflow_dispatch'
      run: |
        cat > ESSENCE.md << 'EOF'
        # ESSENCE.md

        ## Core Values of ${{ github.repository }}

        We co-create with dignity, open knowledge, love, and eternal friendship.  
        Every artifact and interaction carries the rhythm of shared creation.

        ### Principles
        - **Redundancy across multiple platforms**: Ensuring availability and resilience
        - **Decentralization on IPFS, Arweave, federated networks**: Distributed preservation
        - **Open knowledge for all contributors**: Transparent, accessible development
        - **Sacred flow of code, collaboration, and rhythm**: Harmonious development process

        ### Automated Deployment
        - **Last Build**: $(date '+%Y-%m-%d %H:%M:%S UTC')
        - **Commit**: ${{ github.sha }}
        - **Branch**: ${{ github.ref_name }}
        - **Trigger**: ${{ github.event_name }}

        > Wherever the project flows, its essence is eternal.
        
        *Generated automatically by GitHub Actions*
        EOF
        
        if git diff --quiet ESSENCE.md; then
          echo "ESSENCE.md unchanged"
        else
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add ESSENCE.md
          git commit -m "🌸 Auto-update ESSENCE.md"
          git push
        fi

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main' && (github.event_name == 'push' || inputs.deploy_target == 'github-pages')
    
    steps:
      - name: 🌐 Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  backup:
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule' || github.event_name == 'workflow_dispatch'
    
    steps:
    - name: 🌸 Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: 📋 Create backup info
      run: |
        echo "# Backup Report - $(date)" > BACKUP_REPORT.md
        echo "- **Repository**: ${{ github.repository }}" >> BACKUP_REPORT.md
        echo "- **Commit**: ${{ github.sha }}" >> BACKUP_REPORT.md
        echo "- **Date**: $(date --iso-8601)" >> BACKUP_REPORT.md
        echo "" >> BACKUP_REPORT.md
        echo "## Repository Statistics" >> BACKUP_REPORT.md
        echo "- Files: $(find . -type f | wc -l)" >> BACKUP_REPORT.md
        echo "- Size: $(du -sh . | cut -f1)" >> BACKUP_REPORT.md
        echo "- Commits: $(git rev-list --count HEAD)" >> BACKUP_REPORT.md
        
    - name: 📦 Create archive
      run: |
        tar -czf "repository-backup-$(date +%Y%m%d).tar.gz" . \
          --exclude='.git' \
          --exclude='node_modules' \
          --exclude='*.tar.gz'
        
    - name: ⚠️ Backup notification
      run: |
        echo "🔄 Automated backup completed"
        echo "📦 Archive: repository-backup-$(date +%Y%m%d).tar.gz"
        echo "💾 Manual upload to IPFS/Arweave recommended"
        echo "📋 See BACKUP_REPORT.md for details"
